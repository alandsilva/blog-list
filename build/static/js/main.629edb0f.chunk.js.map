{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","hooks/index.js","components/Blog.js","components/BlogForm.js","services/login.js","reducers/authReducer.js","components/LoginForm.js","components/Togglable.js","components/Notification.js","services/users.js","reducers/userReducer.js","components/UserList.js","components/User.js","components/Menu.js","App.js","store.js","index.js"],"names":["timer","baseUrl","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","id","updatedObject","put","remove","delete","addComment","comment","setNotification","message","style","time","dispatch","clearTimeout","type","setTimeout","removeNotification","reducer","state","action","createBlog","blogService","newBlog","title","author","concat","filter","blog","map","useField","useState","value","setValue","onChange","event","target","reset","Blog","useDispatch","params","useParams","navigate","useNavigate","useSelector","blogs","user","auth","className","Card","Body","Title","Subtitle","Link","href","url","Text","likes","Button","variant","onClick","blogToUpdate","updatedBlog","console","log","like","name","username","window","confirm","Form","onSubmit","preventDefault","Group","controlId","Control","placeholder","Table","striped","comments","Math","random","BlogForm","Label","login","credentials","LoginForm","password","newLogin","loginService","localStorage","setItem","JSON","stringify","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","Notification","notification","Alert","UserList","users","useEffect","userService","to","length","User","Menu","Navbar","bg","expand","Container","fluid","Brand","as","Toggle","aria-controls","Collapse","Nav","maxHeight","navbarScroll","disabled","removeItem","App","blogFormRef","useRef","handleCreateBlog","current","loggedUserJSON","getItem","parse","path","element","combineReducers","notificationReducer","blogReducer","authReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.629edb0f.chunk.js","sourcesContent":["const reducer = (state = '', action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.data;\n  case 'REMOVE_NOTIFICATION':\n    return '';\n  default:\n    return state;\n  }\n};\n\nlet timer;\nexport const setNotification = (message, style, time) => {\n  return async (dispatch) => {\n    clearTimeout(timer);\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: { message, style },\n    });\n\n    timer = setTimeout(() => {\n      dispatch(removeNotification());\n    }, time * 1000);\n  };\n};\n\nexport const removeNotification = () => {\n  return {\n    type: 'REMOVE_NOTIFICATION',\n  };\n};\n\nexport default reducer;\n","import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, updatedObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, updatedObject);\n  return response.data;\n};\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst addComment = async (id, comment) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment });\n  return response.data;\n};\n\nexport default { getAll, setToken, create, update, remove, addComment };\n","/* eslint-disable indent */\nimport blogService from '../services/blogs';\nimport { setNotification } from './notificationReducer';\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data;\n    case 'NEW_BLOG':\n      return state.concat(action.data);\n    case 'REMOVE_BLOG':\n      return state.filter((blog) => blog.id !== action.data.id);\n    case 'LIKE':\n    case 'COMMENT':\n      return state.map((blog) =>\n        blog.id !== action.data.id ? blog : action.data\n      );\n    default:\n      return state;\n  }\n};\n\nexport const initializeBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    });\n  };\n};\n\nexport const createBlog = (newObject) => {\n  return async (dispatch) => {\n    try {\n      const newBlog = await blogService.create(newObject);\n      dispatch({\n        type: 'NEW_BLOG',\n        data: newBlog,\n      });\n      dispatch(\n        setNotification(\n          `A new blog '${newBlog.title}' by '${newBlog.author}'`,\n          'success',\n          5\n        )\n      );\n    } catch (err) {\n      dispatch(setNotification('Failed to create blog', 'danger', 5));\n    }\n  };\n};\n\nexport const like = (blog) => {\n  const blogToUpdate = {\n    user: blog.user.id,\n    likes: blog.likes + 1,\n    author: blog.author,\n    title: blog.title,\n    url: blog.url,\n  };\n  return async (dispatch) => {\n    try {\n      const updatedBlog = await blogService.update(blog.id, blogToUpdate);\n      console.log(updatedBlog);\n      dispatch({\n        type: 'LIKE',\n        data: updatedBlog,\n      });\n      dispatch(\n        setNotification(`You liked '${updatedBlog.title}'`, 'success', 5)\n      );\n    } catch (err) {\n      dispatch(setNotification('Failed to like blog', 'danger', 5));\n    }\n  };\n};\n\nexport const remove = (id) => {\n  return async (dispatch) => {\n    try {\n      await blogService.remove(id);\n      dispatch({\n        type: 'REMOVE_BLOG',\n        data: { id },\n      });\n      dispatch(setNotification('You deleted a blog', 'success', 5));\n    } catch (err) {\n      dispatch(setNotification('Failed to delete blog', 'danger', 5));\n    }\n  };\n};\n\nexport const addComment = (id, comment) => {\n  return async (dispatch) => {\n    try {\n      const updatedBlog = await blogService.addComment(id, comment);\n      dispatch({\n        type: 'COMMENT',\n        data: updatedBlog,\n      });\n      dispatch(\n        setNotification(`You commented on '${updatedBlog.title}'`, 'success', 5)\n      );\n    } catch (err) {\n      dispatch(setNotification('Failed to comment on blog', 'danger', 5));\n    }\n  };\n};\n\nexport default reducer;\n","import { useState } from 'react';\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('');\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n\n  return {\n    type,\n    value,\n    onChange,\n    reset,\n  };\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { like, remove, addComment } from '../reducers/blogReducer';\nimport { useField } from '../hooks';\n\nimport { Card, Button, Form, Table } from 'react-bootstrap';\n\nconst Blog = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const navigate = useNavigate();\n  const blog = useSelector((state) =>\n    state.blogs.filter((blog) => blog.id === params.id)\n  )[0];\n  const user = useSelector((state) => state.auth.user);\n  const comment = useField('text');\n\n  const handleLikeBlog = () => {\n    dispatch(like(blog));\n  };\n\n  const handleRemoveBlog = () => {\n    if (window.confirm(`Remove blog '${blog.title}' by '${blog.author}?'`)) {\n      dispatch(remove(blog.id));\n      navigate('/');\n    }\n  };\n\n  const handleComment = (event) => {\n    event.preventDefault();\n    dispatch(addComment(blog.id, comment.value));\n    comment.reset();\n  };\n\n  if (!blog) {\n    return null;\n  }\n\n  return (\n    <div className='container'>\n      <Card>\n        <Card.Body>\n          <Card.Title>{blog.title}</Card.Title>\n          <Card.Subtitle className='mb-2 text-muted'>\n            {blog.author}\n          </Card.Subtitle>\n          <Card.Link href={blog.url}>{blog.url}</Card.Link>\n          <Card.Text>\n            Likes <span className='like-value'>{blog.likes}</span>{' '}\n            <Button\n              id='like-button'\n              variant='outline-primary'\n              onClick={handleLikeBlog}\n            >\n              like\n            </Button>\n          </Card.Text>\n          <Card.Text>{blog.user.name}</Card.Text>\n        </Card.Body>\n      </Card>\n\n      {user.username === blog.user.username && (\n        <Card.Text>\n          <Button\n            id='remove-button'\n            variant='outline-danger'\n            onClick={handleRemoveBlog}\n          >\n            Delete\n          </Button>\n        </Card.Text>\n      )}\n\n      <h3>comments</h3>\n      <Form onSubmit={handleComment}>\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\n          <Form.Control {...comment} reset={null} placeholder='Enter comment' />\n          <Form.Text className='text-muted'>\n            Say what yout thought about this blog\n          </Form.Text>\n        </Form.Group>\n        <Button variant='primary' type='submit'>\n          add comment\n        </Button>\n      </Form>\n\n      <Table striped>\n        <tbody>\n          {blog.comments.map((comment) => (\n            <tr key={comment + Math.random() * 100}>\n              <td>{comment}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Blog;\n","import React from 'react';\nimport { useField } from '../hooks';\n\nimport { Form, Button } from 'react-bootstrap';\n\nconst BlogForm = ({ createBlog }) => {\n  const title = useField('text');\n  const author = useField('text');\n  const url = useField('url');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newBlog = {\n      title: title.value,\n      author: author.value,\n      url: url.value,\n    };\n    createBlog(newBlog);\n    title.reset();\n    author.reset();\n    url.reset();\n  };\n  return (\n    <div>\n      <h2>create new</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\n          <Form.Label>title</Form.Label>\n          <Form.Control\n            id='title'\n            {...title}\n            reset={null}\n            placeholder='Enter Title'\n          />\n        </Form.Group>\n\n        <Form.Group className='mb-3' controlId='formBasicPassword'>\n          <Form.Label>author</Form.Label>\n          <Form.Control\n            id='author'\n            {...author}\n            reset={null}\n            placeholder='Author McAuthor'\n          />\n        </Form.Group>\n\n        <Form.Group className='mb-3' controlId='formBasicEmail'>\n          <Form.Label>url</Form.Label>\n          <Form.Control\n            id='url'\n            {...url}\n            reset={null}\n            placeholder='https://url.com'\n          />\n        </Form.Group>\n\n        <Button id='blogform-button' variant='primary' type='submit'>\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default BlogForm;\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","/* eslint-disable indent */\nimport loginService from '../services/login';\nimport blogService from '../services/blogs';\nimport { setNotification } from './notificationReducer';\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_CREDENTIALS':\n      return action.data;\n    case 'REMOVE_CREDENTIALS':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport const login = (newLogin) => {\n  return async (dispatch) => {\n    try {\n      const user = await loginService.login(newLogin);\n      window.localStorage.setItem('loggedBloglistUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      dispatch({\n        type: 'SET_CREDENTIALS',\n        data: { user },\n      });\n    } catch (err) {\n      dispatch(setNotification('Wrong credentials', 'danger', 5));\n    }\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch) => {\n    window.localStorage.removeItem('loggedBloglistUser');\n    blogService.setToken(null);\n    dispatch({\n      type: 'REMOVE_CREDENTIALS',\n    });\n  };\n};\n\nexport const getAuthFromMemory = () => {\n  return async (dispatch) => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch({\n        type: 'SET_CREDENTIALS',\n        data: { user },\n      });\n      blogService.setToken(user.token);\n    }\n  };\n};\n\nexport default reducer;\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { login } from '../reducers/authReducer';\nimport { useField } from '../hooks';\n\nimport { Form, Button } from 'react-bootstrap';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const username = useField('text');\n  const password = useField('password');\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    const newLogin = { username: username.value, password: password.value };\n    dispatch(login(newLogin));\n  };\n  return (\n    <Form onSubmit={handleLogin}>\n      <Form.Group className='mb-3' controlId='formBasicEmail'>\n        <Form.Label>username</Form.Label>\n        <Form.Control\n          id='username'\n          {...username}\n          reset={null}\n          placeholder='Enter Username'\n        />\n      </Form.Group>\n\n      <Form.Group className='mb-3' controlId='formBasicPassword'>\n        <Form.Label>password</Form.Label>\n        <Form.Control\n          id='password'\n          {...password}\n          reset={null}\n          placeholder='Password'\n        />\n      </Form.Group>\n      <Button id='login-button' variant='primary' type='submit'>\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'react-bootstrap';\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button variant='danger' onClick={toggleVisibility}>\n          cancel\n        </Button>\n      </div>\n    </div>\n  );\n});\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\nTogglable.displayName = 'Togglable';\n\nexport default Togglable;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = () => {\n  const notification = useSelector((state) => state.notification);\n\n  return (\n    <div>\n      {notification.message && (\n        <Alert id='notification' variant={notification.style}>\n          {notification.message}\n        </Alert>\n      )}\n    </div>\n  );\n};\n\nexport default Notification;\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll };\n","/* eslint-disable indent */\nimport userService from '../services/users';\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const initializeUsers = () => {\n  return async (dispatch) => {\n    try {\n      const users = await userService.getAll();\n      console.log(users);\n      dispatch({\n        type: 'INIT_USERS',\n        data: users,\n      });\n    } catch (error) {\n      console.log('failed to get users');\n    }\n  };\n};\n\nexport default reducer;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { initializeUsers } from '../reducers/userReducer';\n\nimport { Table } from 'react-bootstrap';\n\nconst UserList = () => {\n  const users = useSelector((state) => state.users);\n  console.log(users);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('userlist useeffect');\n    dispatch(initializeUsers());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h3>Users</h3>\n      <Table striped>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>blogs created</th>\n          </tr>\n          {users.map((user) => (\n            <tr key={user.id}>\n              <td>\n                <Link to={`/users/${user.id}`}>{user.name}</Link>\n              </td>\n              <td>{user.blogs.length}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Table } from 'react-bootstrap';\n\nconst User = () => {\n  let params = useParams();\n  let user = useSelector((state) =>\n    state.users.filter((user) => user.id === params.id)\n  )[0];\n\n  if (!user) {\n    return null;\n  }\n  return (\n    <div>\n      <h2>{user.name}</h2>\n      <h3>added blogs</h3>\n      <Table striped>\n        <tbody>\n          {user.blogs.map((blog) => (\n            <tr key={blog.id}>\n              <td>\n                {blog.title} - {blog.author}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\n\nimport { logout } from '../reducers/authReducer';\n\nconst Menu = () => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  return (\n    <Navbar bg='light' expand='lg'>\n      <Container fluid>\n        <Navbar.Brand href='#' as='span'>\n          <Link to='/'>blogs</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='navbarScroll' />\n        <Navbar.Collapse id='navbarScroll'>\n          <Nav\n            className='me-auto my-2 my-lg-0'\n            style={{ maxHeight: '100px' }}\n            navbarScroll\n          >\n            <Nav.Link href='#' as='span'>\n              <Link to='/users'>users</Link>\n            </Nav.Link>\n          </Nav>\n          <Nav className='d-flex'>\n            <Nav.Link href='#' disabled>\n              {auth.user.name} logged in\n            </Nav.Link>\n            <Button variant='outline-danger' onClick={handleLogout}>\n              Logout\n            </Button>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Menu;\n","import React, { useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport Togglable from './components/Togglable';\nimport Notification from './components/Notification';\nimport UserList from './components/UserList';\nimport User from './components/User';\nimport Menu from './components/Menu';\nimport './index.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initializeBlogs, createBlog } from './reducers/blogReducer';\nimport { getAuthFromMemory } from './reducers/authReducer';\n\nimport { Routes, Route, Link } from 'react-router-dom';\n\nimport { Table } from 'react-bootstrap';\n\nconst App = () => {\n  const blogs = useSelector((state) => state.blogs);\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const blogFormRef = useRef();\n\n  const handleCreateBlog = async (newBlog) => {\n    dispatch(createBlog(newBlog));\n    blogFormRef.current.toggleVisibility();\n  };\n\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getAuthFromMemory());\n  }, []);\n\n  const loginForm = () => {\n    return <LoginForm />;\n  };\n  const blogsData = () => {\n    return (\n      <div>\n        <Togglable buttonLabel='create Blog' ref={blogFormRef}>\n          <BlogForm createBlog={handleCreateBlog} />\n        </Togglable>\n\n        <Table striped>\n          <tbody>\n            {blogs.map((blog) => (\n              <tr key={blog.id}>\n                <td>\n                  <Link to={`/blogs/${blog.id}`}>\n                    {blog.title} - {blog.author}\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  };\n  return (\n    <div className='container'>\n      <Notification />\n      {auth === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <Menu />\n          <h2>blogs</h2>\n          <Routes>\n            <Route path='/users/:id' element={<User />} />\n            <Route path='/users' element={<UserList />} />\n            <Route path='/blogs/:id' element={<Blog />} />\n            <Route path='/' element={blogsData()} />\n          </Routes>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport notificationReducer from './reducers/notificationReducer';\nimport blogReducer from './reducers/blogReducer';\nimport authReducer from './reducers/authReducer';\nimport userReducer from './reducers/userReducer';\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogReducer,\n  auth: authReducer,\n  users: userReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}